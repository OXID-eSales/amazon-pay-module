{% set amazonConfig = oViewConf.getAmazonConfig() %}
{% set sToken = oViewConf.getSessionChallengeToken() %}
{% set aPayload = oViewConf.getPayloadExpress() %}
<div class="amazonpay-button {{ buttonclass }} express" id="{{ buttonId }}"></div>
{% capture assign = "amazonpay_script_expressbutton" %}
    // console.log('amazonpay_script_expressbutton captured');
    if (typeof {{ buttonId }}_is_rendered === "undefined" || {{ buttonId }}_is_rendered !== true) {
        /* console.log('amazonpay_script amazonexpressbutton');
        console.log('ButtonId: ' + '{{  buttonId }}');
        console.log('sandbox: ' + '{% if amazonConfig.isSandbox() %}true{% else %}false{% endif %}');
        console.log('buttonclass: ' + '{{  buttonclass }}');
        console.log('Payload: ' + '{{  aPayload|raw }}');
    */
        amazon.Pay.renderButton('#{{ buttonId }}', {
            merchantId: '{{ amazonConfig.getMerchantId() }}',
            sandbox: {% if amazonConfig.isSandbox() %}true{% else %}false{% endif %},
            ledgerCurrency: '{{ amazonConfig.getLedgerCurrency() }}',
            checkoutLanguage: '{{ amazonConfig.getCheckoutLanguage() }}',
            productType: 'PayAndShip',
            placement: '{{ placement }}',
            createCheckoutSessionConfig: {
                payloadJSON: '{{ aPayload|raw }}',
                signature: '{{ oViewConf.signature }}',
                publicKeyId: '{{ amazonConfig.getPublicKeyId() }}'
        }
    });
    {{ buttonId }}_is_rendered = true;
    // console.log('{{ buttonId }}_is_rendered:' + {{ buttonId }}_is_rendered );
    }
{% endcapture %}
{{ script({ add: amazonpay_script_expressbutton, dynamic: __oxid_include_dynamic }) }}
